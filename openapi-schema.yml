openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: 'This ViewSet automatically provides `list`, `create`, `retrieve`,

        `update` and `destroy` actions.'
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: 'This ViewSet automatically provides `list`, `create`, `retrieve`,

        `update` and `destroy` actions.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: 'This ViewSet automatically provides `list`, `create`, `retrieve`,

        `update` and `destroy` actions.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: 'This ViewSet automatically provides `list`, `create`, `retrieve`,

        `update` and `destroy` actions.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: 'This ViewSet automatically provides `list`, `create`, `retrieve`,

        `update` and `destroy` actions.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: 'This ViewSet automatically provides `list`, `create`, `retrieve`,

        `update` and `destroy` actions.'
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/challenges/:
    get:
      operationId: listChallenges
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Challenge'
          description: ''
      tags:
      - api
    post:
      operationId: createChallenge
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Challenge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Challenge'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: ''
      tags:
      - api
  /api/challenges/{id}/:
    get:
      operationId: retrieveChallenge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this challenge.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: ''
      tags:
      - api
    put:
      operationId: updateChallenge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this challenge.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Challenge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Challenge'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateChallenge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this challenge.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Challenge'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Challenge'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Challenge'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyChallenge
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this challenge.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/responses/:
    get:
      operationId: listResponses
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Response'
          description: ''
      tags:
      - api
    post:
      operationId: createResponse
      description: ''
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
      tags:
      - api
  /api/responses/{id}/:
    get:
      operationId: retrieveResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this response.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
      tags:
      - api
    put:
      operationId: updateResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this response.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this response.
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Response'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Response'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyResponse
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this response.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/tags/:
    get:
      operationId: listTags
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TaggitTag'
          description: ''
      tags:
      - api
    post:
      operationId: createTag
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggitTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaggitTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaggitTag'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggitTag'
          description: ''
      tags:
      - api
  /api/tags/{id}/:
    get:
      operationId: retrieveTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggitTag'
          description: ''
      tags:
      - api
    put:
      operationId: updateTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggitTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaggitTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaggitTag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggitTag'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaggitTag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaggitTag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaggitTag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaggitTag'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTag
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        is_admin:
          type: boolean
      required:
      - username
    Challenge:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        end_time:
          type: string
          format: date-time
          nullable: true
        winning_response:
          type: integer
          nullable: true
        image:
          type: string
          format: binary
          nullable: true
        tags:
          type: array
          items:
            type: string
      required:
      - title
      - description
      - tags
    Response:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        challenge:
          type: integer
        content:
          type: string
        tags:
          type: array
          items:
            type: string
      required:
      - challenge
      - content
      - tags
    TaggitTag:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
      required:
      - name
